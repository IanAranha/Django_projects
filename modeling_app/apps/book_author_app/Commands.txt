Create a new model called 'Book' with the information above.
Create a new model called 'Author' with the information above.  Design the models in a way that you could perform the following:
Book.objects.first().authors
Author.objects.first().books
Successfully create and run the migration files

^C(djangoPy3env) Ians-MacBook-Pro:dojo_ninjas_project ianaranha$ python manage.py makemigrations
Migrations for 'book_author_app':
  apps/book_author_app/migrations/0001_initial.py:
    - Create model Author
    - Create model Book
    - Add field books to author
(djangoPy3env) Ians-MacBook-Pro:dojo_ninjas_project ianaranha$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, book_author_app, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  Rendering model states... DONE
  Applying book_author_app.0001_initial... OK
(djangoPy3env) Ians-MacBook-Pro:dojo_ninjas_project ianaranha$ 

************************************************************************************

Using the shell...
Create 5 books with the following names: C sharp, Java, Python, PHP, Ruby

(djangoPy3env) Ians-MacBook-Pro:dojo_ninjas_project ianaranha$ ls
apps			db.sqlite3		dojo_ninjas_project	manage.py
(djangoPy3env) Ians-MacBook-Pro:dojo_ninjas_project ianaranha$ python manage.py shell
Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 16:52:21) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.7.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from apps.book_author_app.models import *                                                                                                     

In [2]: Book.objects.create(name='C sharp')                                                                                                           
Out[2]: <Book: Book object>

In [3]: Book.objects.create(name='Java')                                                                                                              
Out[3]: <Book: Book object>

In [4]: Book.objects.create(name='Python')                                                                                                            
Out[4]: <Book: Book object>

In [5]: Book.objects.create(name='PHP')                                                                                                               
Out[5]: <Book: Book object>

In [6]: Book.objects.create(name='Ruby')                                                                                                              
Out[6]: <Book: Book object>

***************************************************************************************
Create 5 different authors: Mike, Speros, John, Jadee, Jay
In [7]: Author.objects.create(first_name='Mike', last_name='Tiddlywinks')                                                                             
Out[7]: <Author: Author object>

In [8]: Author.objects.create(first_name='Speros', last_name='Toddywonks')                                                                            
Out[8]: <Author: Author object>

In [9]: Author.objects.create(first_name='John', last_name='Teddywenks')                                                                              
Out[9]: <Author: Author object>

In [10]: Author.objects.create(first_name='Jadee', last_name='Taddywanks')                                                                            
Out[10]: <Author: Author object>

In [11]: Author.objects.create(first_name='Jay', last_name='Tuddywunks')                                                                              
Out[11]: <Author: Author object>

***************************************************************************************

Add a new field in the authors table called 'notes'.  Make this a TextField.  Successfully create and run the migration files.

(djangoPy3env) Ians-MacBook-Pro:dojo_ninjas_project ianaranha$ python manage.py makemigrations
Migrations for 'book_author_app':
  apps/book_author_app/migrations/0002_author_notes.py:
    - Add field notes to author
(djangoPy3env) Ians-MacBook-Pro:dojo_ninjas_project ianaranha$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, book_author_app, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  Rendering model states... DONE
  Applying book_author_app.0002_author_notes... OK
(djangoPy3env) Ians-MacBook-Pro:dojo_ninjas_project ianaranha$ 

****************************************************************************************

Change the name of the 5th book to C#
In [3]: book=Book.objects.get(id=5)                                                                                                                   

In [4]: book.name                                                                                                                                     
Out[4]: 'Ruby'

In [5]: book.name='C#'                                                                                                                                

In [6]: book.name                                                                                                                                     
Out[6]: 'C#'


****************************************************************************************

Change the first_name of the 5th author to Ketul

In [7]: author=Author.objects.get(id=5)                                                                                                               

In [8]: author.first_name                                                                                                                             
Out[8]: 'Jay'

In [9]: author.first_name='Ketul'                                                                                                                     

In [10]: author.first_name                                                                                                                            
Out[10]: 'Ketul'

***************************************************************************************

Assign the first author to the first 2 books

In [11]: this_author=Author.objects.get(id=1)                                                                                                         

In [12]: this_book=Book.objects.get(id=1)                                                                                                             

In [13]: this_author.books.add(this_book)                                                                                                             

In [14]: this_author.books.add(Book.objects.get(id=2))        

*****************************************************************************************  
Assign the second author to the first 3 books



Assign the third author to the first 4 books
Assign the fourth author to the first 5 books (or in other words, all the books)
For the 3rd book, retrieve all the authors
For the 3rd book, remove the first author
For the 2nd book, add the 5th author as one of the authors
Find all the books that the 3rd author is part of
Find all the books that the 2nd author is part of